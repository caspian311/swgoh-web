{"version":3,"sources":["actions/ActionTypes.js","components/Menu.js","actions/MenuActions.js","components/Header.js","components/SideNav.js","components/Error.js","actions/ErrorActions.js","services/CharacterService.js","components/Characters.js","actions/CharacterActions.js","components/App.js","reducers/InitialMenuState.js","reducers/MenuReducer.js","reducers/InitialCharactersState.js","reducers/CharactersReducer.js","reducers/InitialErrorState.js","reducers/ErrorReducer.js","reducers/index.js","store/index.js","index.js"],"names":["SHOW_ERROR","DISMISS_ERROR","MENU_OPENED","MENU_CLOSED","CHARACTERS_LOADING","CHARACTERS_LOADED","CHARACTERS_STOPPED_LOADING","Menu","toggleMenu","props","isOpen","closeMenu","openMenu","className","this","onClick","Component","connect","state","menu","dispatch","type","types","menuActions","Header","SideNav","Error","classNames","names","showError","dismiss","errorMessage","undefined","error","errorActions","axios","require","Character","src","image","alt","name","description","categories","Characters","characters","map","character","index","key","loadCharacters","isLoading","loading","a","async","get","then","response","c","join","payload","CharacterActions","App","menuReducer","initialState","action","charactersReducer","errorReducer","message","combineReducers","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1572cb3b.chunk.js","sourcesContent":["export const SHOW_ERROR= \"SHOW_ERROR\";\nexport const DISMISS_ERROR= \"DISMISS_ERROR\";\nexport const MENU_OPENED = \"MENU_OPENED\";\nexport const MENU_CLOSED = \"MENU_CLOSED\";\nexport const CHARACTERS_LOADING = \"CHARACTERS_LOADING\";\nexport const CHARACTERS_LOADED = \"CHARACTERS_LOADED\";\nexport const CHARACTERS_STOPPED_LOADING = \"CHARACTERS_STOPPED_LOADING\";\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as menuActions from '../actions/MenuActions.js';\nimport \"./Menu.css\";\n\nclass Menu extends Component {\n  toggleMenu = () => {\n    if (this.props.isOpen) {\n      this.props.closeMenu();\n    } else  {\n      this.props.openMenu();\n    }\n  }\n\n  render() {\n    return (\n      <div \n          className={ this.props.isOpen ? \"hamburger-menu open\" : \"hamburger-menu\" } \n          onClick={() => { this.toggleMenu() }}>\n        <div className=\"bar1\"></div>\n        <div className=\"bar2\"></div>\n        <div className=\"bar3\"></div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isOpen: state.menu.isOpen\n});\n\nconst mapDispatchToProps = dispatch => ({\n  openMenu() {\n    menuActions.openMenu(dispatch);\n  },\n  closeMenu() {\n    menuActions.closeMenu(dispatch);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\n","import * as types from \"./ActionTypes\";\n\nexport function openMenu(dispatch) {\n  dispatch({ type: types.MENU_OPENED });\n}\n\nexport function closeMenu(dispatch) {\n  dispatch({ type: types.MENU_CLOSED });\n}\n\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport Menu from './Menu.js';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h1 className=\"title\">Experiments</h1>\n        <Menu />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport \"./SideNav.css\";\n\nclass SideNav extends Component {\n  render() {\n    return (\n        <div className={ this.props.isOpen ? \"side-nav show\" : \"side-nav\"}>\n          <ul>\n            <li>Main</li>\n            <li>About</li>\n            <li>Contact</li>\n          </ul>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isOpen: state.menu.isOpen\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SideNav);\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport './Error.css';\nimport * as errorActions from \"../actions/ErrorActions\";\n\nclass Error extends Component {\n  classNames = () => {\n    let names = \"error\";\n    if (this.props.showError) {\n      names += \" show\";\n    }\n    return names;\n  }\n\n  dismiss = () => {\n    this.props.dismiss();\n  }\n\n  render() {\n    return (<div className={this.classNames()}>\n      <div className=\"close\" onClick={() => this.dismiss() }>X</div>\n      <h3>Oh no!</h3>\n      It looks like something went wrong. Here's some details...\n      <div className=\"details\">\n        {this.props.errorMessage}\n      </div>\n      </div>);\n  }\n}\n\nconst mapStateToProps = state => ({\n  showError: state.error.errorMessage !== undefined,\n  errorMessage: state.error.errorMessage\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dismiss() {\n    errorActions.dismissError(dispatch);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Error);\n","import * as types from './ActionTypes';\n\nexport function dismissError(dispatch) {\n  dispatch({ type: types.DISMISS_ERROR });\n}\n","let axios = require('axios');\n\nexport function loadCharacters() {\n  return axios.get('/api/characters').then(response => {\n    return response['data'].map((character) => {\n      return {\n        name: character[\"name\"],\n        description: character[\"description\"],\n        image: `https://swgoh.gg${character[\"image\"]}`,\n        categories: character[\"categories\"].map((c) => { return c.name; }).join(\", \")\n      };\n    });\n  });\n}\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as CharacterActions from '../actions/CharacterActions';\nimport './Characters.css';\n\nclass Character extends Component {\n  render() {\n    return (\n      <div className=\"character\">\n        <img src={this.props.image} alt={this.props.name} />\n        <div className=\"character-data\">\n          <span className=\"label\">Name:</span>\n          <span className=\"info\">{this.props.name}</span>\n          <span className=\"label\">Description:</span>\n          <span className=\"info\">{this.props.description}</span>\n          <span className=\"label\">Categories:</span>\n          <span className=\"info\">{this.props.categories}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Characters extends Component {\n  componentDidMount() {\n    this.props.loadCharacters();\n  }\n\n  characters = () => {\n    return (<div className=\"characters\">\n      {this.props.characters.map((character, index) => {\n        return (<Character key={index}\n                           name={character.name}\n                           image={character.image}\n                           description={character.description}\n                           categories={character.categories}\n          />);\n      })}\n    </div>);\n  }\n\n  render() {\n    return (\n      <div>\n        { this.props.isLoading ? 'Loading...' : this.characters() }\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  isLoading: state.characters.loading,\n  characters: state.characters.characters,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  loadCharacters() {\n    CharacterActions.loadCharacters(dispatch);\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Characters);\n","import * as types from './ActionTypes';\nimport * as characterService from '../services/CharacterService';\n\nexport async function loadCharacters(dispatch) {\n  dispatch({ type: types.CHARACTERS_LOADING});\n  try {\n    const characters = await characterService.loadCharacters();\n    dispatch({ type: types.CHARACTERS_LOADED, payload: characters });\n    dispatch({ type: types.CHARACTERS_STOPPED_LOADING });\n  } catch (error) {\n    dispatch({ type: types.CHARACTERS_STOPPED_LOADING });\n    dispatch({ type: types.SHOW_ERROR, payload: error });\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Header from './Header';\nimport SideNav from './SideNav';\nimport Error from './Error';\nimport Characters from './Characters';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Error />\n        <Header />\n        <SideNav />\n        <Characters />\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export default {\n  isOpen: false\n};\n\n","import initialState from \"./InitialMenuState\";\nimport * as types from \"../actions/ActionTypes\";\n\nconst menuReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.MENU_CLOSED:\n      return {\n          ...state,\n          isOpen: false\n        };\n    case types.MENU_OPENED:\n      return {\n          ...state,\n          isOpen: true\n        };\n    default:\n      return state\n  }\n};\n\nexport default menuReducer;\n","export default {\n  loading: false,\n  characters: []\n};\n\n","import initialState from \"./InitialCharactersState\";\nimport * as types from '../actions/ActionTypes';\n\nconst charactersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.CHARACTERS_LOADING:\n      return {\n          ...state,\n          loading: true,\n        };\n    case types.CHARACTERS_LOADED:\n      return {\n          ...state,\n          characters: action.payload\n        };\n    case types.CHARACTERS_STOPPED_LOADING:\n      return {\n          ...state,\n          loading: false,\n        };\n    default:\n      return state\n  }\n};\n\nexport default charactersReducer;\n","export default {\n  showError: false,\n  errorMessage: undefined\n};\n\n","import initialState from \"./InitialErrorState\";\nimport * as types from \"../actions/ActionTypes\";\n\nconst errorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SHOW_ERROR:\n      return {\n          ...state,\n          errorMessage: action.payload.message\n        };\n    case types.DISMISS_ERROR:\n      return {\n          ...state,\n          errorMessage: undefined\n        };\n    default:\n      return state\n  }\n};\n\nexport default errorReducer;\n","import { combineReducers } from 'redux'\nimport menu from './MenuReducer'\nimport characters from './CharactersReducer'\nimport error from './ErrorReducer'\n\nexport default combineReducers({\n  menu,\n  characters,\n  error\n})\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport thunk from \"redux-thunk\";\n\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport function configureStore() {\n  return createStore(\n    rootReducer,\n    storeEnhancers(applyMiddleware(thunk))\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { configureStore } from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n"],"sourceRoot":""}